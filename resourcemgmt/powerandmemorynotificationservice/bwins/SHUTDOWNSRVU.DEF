EXPORTS
	?NewL@CServShutdownServer@@SAPAV1@XZ @ 1 NONAME ; class CServShutdownServer * CServShutdownServer::NewL(void)
	??0CServShutdownServer@@IAE@H@Z @ 2 NONAME ; CServShutdownServer::CServShutdownServer(int)
	??0CServShutdownSession@@IAE@XZ @ 3 NONAME ; CServShutdownSession::CServShutdownSession(void)
	??1CServShutdownServer@@UAE@XZ @ 4 NONAME ; CServShutdownServer::~CServShutdownServer(void)
	??1CServShutdownSession@@UAE@XZ @ 5 NONAME ; CServShutdownSession::~CServShutdownSession(void)
	?CancelPowerOff@CServShutdownServer@@QAEXXZ @ 6 NONAME ; void CServShutdownServer::CancelPowerOff(void)
	?ClientArrayLC@CServShutdownServer@@UAEPAV?$CArrayFix@VTThreadId@@@@XZ @ 7 NONAME ; class CArrayFix<class TThreadId> * CServShutdownServer::ClientArrayLC(void)
	?ConstructL@CServShutdownServer@@UAEXXZ @ 8 NONAME ; void CServShutdownServer::ConstructL(void)
	?GetShutdownState@CServShutdownServer@@UBEXAAH0@Z @ 9 NONAME ; void CServShutdownServer::GetShutdownState(int &, int &) const
	?HandlePowerNotifRequest@CServShutdownServer@@QAEXABVRThread@@@Z @ 10 NONAME ; void CServShutdownServer::HandlePowerNotifRequest(class RThread const &)
	?HandleShutdownEventL@CServShutdownServer@@UAEXW4TSaveType@MSaveObserver@@HW4TPowerState@@@Z @ 11 NONAME ; void CServShutdownServer::HandleShutdownEventL(enum MSaveObserver::TSaveType, int, enum TPowerState)
	?IsClientHung@CServShutdownServer@@UBEHVTThreadId@@@Z @ 12 NONAME ; int CServShutdownServer::IsClientHung(class TThreadId) const
	?IsPowerOff@CServShutdownServer@@QBEHXZ @ 13 NONAME ; int CServShutdownServer::IsPowerOff(void) const
	?NotifySave@CServShutdownServer@@QAEXW4TSaveType@MSaveObserver@@@Z @ 14 NONAME ; void CServShutdownServer::NotifySave(enum MSaveObserver::TSaveType)
	?ServiceL@CServShutdownSession@@MAEXABVRMessage2@@@Z @ 15 NONAME ; void CServShutdownSession::ServiceL(class RMessage2 const &)
	?KShtdwnTimeoutBase@@3JB @ 16 NONAME ; long const KShtdwnTimeoutBase
	?KShtdwnTimeoutClient@@3JB @ 17 NONAME ; long const KShtdwnTimeoutClient

