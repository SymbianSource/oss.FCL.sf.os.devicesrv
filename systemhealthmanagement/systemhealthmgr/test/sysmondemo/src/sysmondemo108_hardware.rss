// Copyright (c) 2005-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
// Modified default resource file to test system starter
// WARNING: Any changes made to this resource file must be
// checked against the system starter test cases. 
// Specifically:
// - AppFailRetry0Ignore
// 
//

#include <startup.rh>

//
// ENTRY POINT
//

// THIS MUST BE THE FIRST RESOURCE. The system relies on
// this having a resource ID of 1

RESOURCE STARTUP_ENTRY_POINT r_entry_point
	{
	entry_point = r_startup_state_critical_static; 
	}
//



//
// CRITICAL-STATIC startup state
//
RESOURCE STATE_INFO r_startup_state_critical_static
	{
	id = EStartupStateCriticalStatic;
	name = "Critical Static";
	command_list = r_critical_static_commands;
	next = r_startup_state_critical_dynamic;
	}

RESOURCE COMMAND_ARRAY r_critical_static_commands
	{
	commands =
		{
		START_PROCESS_INFO
			{
			path = "Z:\\sys\\bin\\SysAgt2Svr.exe";
			start_method = EWaitForStart;
			no_of_retries_on_failure = 2;
			},
		START_PROCESS_INFO
			{
			path = "Z:\\sys\\bin\\fbserv.exe";
			start_method = EWaitForStart;
			no_of_retries_on_failure = 1;
			},
		START_PROCESS_INFO
			{
			path = "Z:\\sys\\bin\\ewsrv.exe";
			args = "-NoShell";
			start_method = EWaitForStart;
			},
		SPLASH_SCREEN
			{
			path = "Z:\\sys\\bin\\splash.exe";
			},
		START_PROCESS_INFO
			{
			path = "Z:\\sys\\bin\\eiksrvs.exe";
			args = "-OnlyStartDependentServers";
			start_method = EWaitForStart;
			},
		START_PROCESS_INFO
			{
			path = "Z:\\sys\\bin\\sisregistryserver.exe";
			start_method = EWaitForStart;
			},
		START_PROCESS_INFO
			{
			path = "Z:\\sys\\bin\\tzserver.exe";
			start_method = EWaitForStart;
			},
		START_APP_INFO2
			{
			path = "Z:\\sys\\bin\\sysmondemoserv.exe";
  			start_method = EWaitForStart;
			monitor = 1;
			}
		};
	}

//
// CRITICAL-DYNAMIC startup state
//
RESOURCE STATE_INFO r_startup_state_critical_dynamic
	{
	id = EStartupStateCriticalDynamic;
	name = "Critical Dynamic";
	command_list = r_critical_dynamic_commands;
	next = r_startup_state_networking_critical;
	}

RESOURCE COMMAND_ARRAY r_critical_dynamic_commands
	{
	commands =
		{
		START_PROCESS_INFO
			{
			path = "Z:\\sys\\bin\\apsexe.exe";
			start_method = EWaitForStart; // this is the only method allowable for apsexe.exe
			},
		START_APP_INFO
			{
			path = "Z:\\sys\\bin\\shell.exe";	// Requires apparc to be properly started
			start_method = EDeferredWaitForStart;
			viewless = 1;	 
			},
		MULTIPLE_WAIT  
			{
			timeout = 10000;
			fail_on_error = EPanicOnCommandFailure;
			},
		SPLASH_SCREEN
			{
			kill = 1;
			}
		};
	}

//
// Networking-CRITICAL startup state
//
RESOURCE STATE_INFO  r_startup_state_networking_critical
	{
	id = EStartupStateNetworkingCritical;   
	name = "Networking-Critical";
	command_list =  r_networking_critical_commands;
	next = 0;
	} 

RESOURCE COMMAND_ARRAY r_networking_critical_commands
	{
	commands =
		{
		START_PROCESS_INFO
			{
			path = "Z:\\sys\\bin\\changebootmode.exe";
			args = "109" ;
  			start_method = EWaitForStart;
			},
		START_PROCESS_INFO
			{
			path = "Z:\\sys\\bin\\c32start.exe";
  			start_method = EWaitForStart;
  			},
		START_PROCESS_INFO
			{
			path = "Z:\\sys\\bin\\msexe.exe";
			start_method = EWaitForStart;
			},
		START_PROCESS_INFO
			{
			path = "Z:\\sys\\bin\\watcher.exe";
			start_method = EWaitForStart;
			},
		GET_NEW_SSC
			{
			}	
	
		};
	}


