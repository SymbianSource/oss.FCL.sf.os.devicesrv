// Copyright (c) 2007-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//

PRINT Run ApStart tests
LOAD_SUITE tapstart_server


START_TESTCASE 			DEVSRVS-SYSSTART-APSTART-0001
//! @SYMTestCaseID 		DEVSRVS-SYSSTART-APSTART-0001
//! @SYMPREQ			PREQ1089
//! @SYMTestType		UT
//! @SYMTestPriority		Critical
//! @SYMTestStatus		Implemented
//! @SYMTestCaseDesc		Check if an application can be loaded with the StartApp method which do not take a TRequestStatus.
//! 				Check if an application can be loaded with the apstart API call that 
//!				Check for successful initialization of AppArc's CApaAppList.
//! 					takes a TRequestStatus parameter.
//! @SYMTestActions		TestStartAndForgetL() Load apstart.dll dynamically and create an object for CAppStart. 
//!  					Use the CApStarter::StartL() function which do not take a TRequestStatus 
//!  					to load TestApp. Verify that the application has been loaded.
//! 				TestStartAndFollowUpL() Load apstart.dll dynamically and create an object for CApStart. 
//!   					Use CApStart::StartL(...TRequestStatus) function to load TestApp. 
//!   					Call User::WaitForRequest to check the loading of the application.
//!				TestInitApparcL() Load apstart.dll dynamically and create an object for CApStart. 
//!					Call CApStart::WaitForApparcToInitializeL() and make sure it doesn't leave.
//! @SYMTestExpectedResults 	Application should be started with no errors.
//! 				Application should be loaded with no errors.
//!				The function should not leave.
RUN_TEST_STEP 100 tapstart_server CApStartTestStep
END_TESTCASE 			DEVSRVS-SYSSTART-APSTART-0001

 