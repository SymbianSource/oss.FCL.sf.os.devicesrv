// Copyright (c) 2007-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//

PRINT Run AmaStarterSSC tests

LOAD_SUITE tamastarter_server

START_TESTCASE 			DEVSRVS-SYSSTART-AMASTARTER-0001
//! @SYMTestCaseID 		DEVSRVS-SYSSTART-AMASTARTER-0001
//! @SYMTestCaseDesc		To check correct launch of AMCs with and without any attempt to retry.
//! 				To check failing to launch AMC in case of timeout, system moves on to launch next AMC in DSC.
//! 				To check if launching AMC panics, system moves on to launch next AMC in DSC.
//! 				To check all AMCs in multiple DSCs are launched starting AMAStarter multiple times
//! 				To ensure that AMC can register for process failure monitoring.
//! 				To check if launching AMAStarter at critical-static, critical-dynamic, Non-critical stages is successful.
//! @SYMPREQ 			PREQ871
//! @SYMREQ			REQ9141
//! @SYMTestType		CIT
//! @SYMTestPriority		Critical
//! @SYMTestStatus 		Implemented
//! @SYMTestCaseDependencies	tamastarter_amaadder has been launched as part of a modified test SSC resource file.
//! @SYMTestActions		TestCase1L() Add the Dsc item(s) for the test AMC(s) to be launched at start up, with following attributes: 
//! 					Start Method as EWaitForStart, a valid timeout interval, a valid launch retry count and 
//! 					start up type as EStartupProcess and for EStartupApp.
//! 					Make few test AMC(s) EXE(s) to wait for longer than timeout interval when AMAStarter tries to 
//! 					launch it for the first time.
//! 				TestCase2L()Add the Dsc item(s) for the test AMC(s) to be launched at start up, with following attributes: 
//! 					Start Method as EWaitForStart, a timeout interval, a valid launch retry count and 
//! 					start up type as EStartupProcess and EStartupApp.
//! 					Add the Dsc item(s) for the test AMC(s) to be launched at start up, with following attributes: 
//! 					Start Method as EFireAndForget, and start up type as EStartupProcess and for EStartupApp.
//! 					Make the test AMC EXE launch timed out when AMAStarter tries to launch it.
//! 				TestCase3L() Repeat the test APPFWK-AMASTARTER-0002, instead of waiting longer than timeout interval, 
//! 					to fail the launch, provide the invalid AMC path and make the AMC(s) panic during startup.
//! 				TestCase4L() Create multiple DSCs having duplicate AMCs as well. Use KDefaultSymbianDsc for one of the DSC.
//! 				TestCase5L() Add the Dsc item for the test AMC to be launched at start up and to be monitored, 
//! 					with following attributes: 
//! 					Start Method as EWaitForStart, and start up type as EStartupProcess.
//! 					Check the recovery method for the AMC. Should be EIgnoreProcessFailure.
//! 					Make the test AMC EXE to register for process failure monitoring.
//! 				TestCase6L() Create the START_AMC_STARTER structure at critical-static, critical-dynamic, Non-critical-dynamic 
//! 					stages with a valid DSC Id.
//! @SYMTestExpectedResults 	The test AMC EXE should be launched successfully within the timeout interval without any retries.
//! 					The test AMC EXE which is timed out should be launched successfully after first retry.
//! 				The AMC(s) which neither timed out nor panic should be launched successfully. 
//! 					The AMC(s) which either timed out or panics should not affect launch of other AMCs in the DSC.
//! 				All the other AMCs apart from the one which panics, in all the DSCs are launched properly. 
//! 					Appropriate logging information is provided for the failed AMC launch.
//! 				All the AMCs in all the DSCs are launched. AMCs in the default DSC are launched in the last.
//! 				The test AMC EXE should be launched and registered for monitoring.
//! 				The system should process all the DSCs mentioned at all start-up stages mentioned.
RUN_TEST_STEP 1000 tamastarter_server AmaStarterSsc
END_TESTCASE 			DEVSRVS-SYSSTART-AMASTARTER-0001

	