// Copyright (c) 2007-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//

PRINT Run AmaStarterStartL tests

LOAD_SUITE tamastarter_server

START_TESTCASE 			DEVSRVS-SYSSTART-AMASTARTER-0012
//! @SYMTestCaseID 		DEVSRVS-SYSSTART-AMASTARTER-0012
//! @SYMTestCaseDesc		AMA started asynchronously using DLL
//! 				Attempt to start non-existent DSC with Start()
//! @SYMPREQ 			PREQ1871
//! @SYMREQ			REQ9141
//! @SYMTestType		UT
//! @SYMTestPriority		Critical
//! @SYMTestStatus 		Implemented
//! @SYMTestCaseDependencies	The appropriate database has been created.
//! @SYMTestActions		TestCase1L() The test uses a known DSC store database with valid items in it.
//! 					Then the test uses (asynchronous) CAmaStart::Start() with the appropriate item id to start these AMAs from an existing DSC item in the created test database.
//! 					The test calls User::WaitForRequest() to wait for the Start() call to complete.
//! 				TestCase2L() The test uses the ID for a DSC that does not exist.
//! 					Then the test calls (asynchronous) CAmaStart::Start() with the appropriate DSC ID.
//! 					The test calls User::WaitForRequest() to wait for the Start() call to complete.
//! @SYMTestExpectedResults 	The different AMAs are started as expected from the test database.
//! 					The application logs are read to check the applications were launched as expected.
//! 				The TRequestStatus object used for the Start() call has a value of KErrNone
//! 				The TRequestStatus object used for the Start() call has a value of KErrArgument
RUN_TEST_STEP 100 tamastarter_server AmaStarterStartLAsync
END_TESTCASE 			DEVSRVS-SYSSTART-AMASTARTER-0012


