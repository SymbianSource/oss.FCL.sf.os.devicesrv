// Copyright (c) 2008-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
// tconditionevaluator_swp_commandlist.rss
// 
//

#include <ssm/ssmcmd.rh>
#include <ssm/conditionresourcetypes.rh>
#include "tconditionevaluator_commandlist.hrh"

UID2 KUidSsmCommandListResourceFile

// SSM_COMMAND_LIST_ROOT must be the first resource in a command list resource file.
// The SSM relies on this having a resource ID of 1.
RESOURCE SSM_COMMAND_LIST_ROOT
	{
	command_list_mapping = r_command_list_mapping;
	}

RESOURCE SSM_COMMAND_LIST_MAPPING r_command_list_mapping
	{
	mappings =
		{
		SSM_COMMANDLISTID_TO_RESOURCEID
			{
			command_list_id = EConditionalCommandsList;
			resource_id = r_conditional_command_list;
			}
		};
	}

RESOURCE SSM_COMMAND_LIST r_conditional_command_list
	{
	commands =
		{
		r_command_evaluate_cond_2,
		r_command_evaluate_cond_4,
		r_command_evaluate_cond_6,
		r_command_evaluate_cond_8,
		r_command_evaluate_cond_10,
		r_command_evaluate_cond_12,
		r_command_evaluate_cond_14,
		r_command_evaluate_cond_16,
		r_command_evaluate_cond_18,
		r_command_evaluate_cond_20,
		r_command_evaluate_cond_22,
		r_command_evaluate_cond_24,
		r_command_evaluate_cond_26,
		r_command_evaluate_cond_28,
		r_command_evaluate_cond_30,
		r_command_evaluate_cond_32,
		r_command_evaluate_cond_34,
		r_command_evaluate_cond_36
		};
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_2
	{
	conditional_information = r_cnd_cf_and_ff;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition2;
	value = 1;
	priority = 410;
	}
	
RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_4
	{
	conditional_information = r_cnd_cf_and_psf;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition4;
	value = 1;
	priority = 390;
	}
	
RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_6
	{
	conditional_information = r_cnd_cv_and_ff;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition6;
	value = 1;
	priority = 370;
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_8
	{
	conditional_information = r_cnd_cv_and_psf;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition8;
	value = 1;
	priority = 350;
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_10
	{
	conditional_information = r_cnd_ff_and_fv;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition10;
	value = 1;
	priority = 330;
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_12
	{
	conditional_information = r_cnd_ff_and_psv;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition12;
	value = 1;
	priority = 310;
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_14
	{
	conditional_information = r_cnd_fv_and_psv;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition14;
	value = 1;
	priority = 290;
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_16
	{
	conditional_information = r_cnd_cf_or_cv;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition16;
	value = 1;
	priority = 270;
	}
	
RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_18
	{
	conditional_information = r_cnd_cf_or_fv;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition18;
	value = 1;
	priority = 250;
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_20
	{
	conditional_information = r_cnd_cf_or_psv;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition20;
	value = 1;
	priority = 230;
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_22
	{
	conditional_information = r_cnd_cv_or_fv;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition22;
	value = 1;
	priority = 210;
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_24
	{
	conditional_information = r_cnd_cv_or_psv;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition24;
	value = 1;
	priority = 190;
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_26
	{
	conditional_information = r_cnd_ff_or_psf;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition26;
	value = 1;
	priority = 170;
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_28
	{
	conditional_information = r_cnd_fv_or_psf;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition28;
	value = 1;
	priority = 150;
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_30
	{
	conditional_information = r_cnd_psf_and_psv;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition30;
	value = 1;
	priority = 130;
	}
	
RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_32
	{
	conditional_information = r_cnd_cent_rep_value;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition32;
	value = 1;
	priority = 110;
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_34
	{
	conditional_information = r_cnd_feature_flag;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition34;
	value = 1;
	priority = 90;
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_36
	{
	conditional_information = r_cnd_pub_sub_flag;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition36;
	value = 1;
	priority = 70;
	}

//recursive//
RESOURCE SSM_CND_LOGICAL_AND r_cnd_recursive
	{
	lhs = r_cnd_pub_sub_value;
	rhs = r_cnd_recursive;
	}
//end of recursive//


//nested condition//
//condition = cf&&(!(cv&&psf))
RESOURCE SSM_CND_LOGICAL_AND r_cnd_nested1
	{
	lhs = r_cnd_cent_rep_flag;
	rhs = r_cnd_nested4;
	}

//condition = cv||psf
RESOURCE SSM_CND_LOGICAL_OR r_cnd_nested2
	{
	lhs = r_cnd_cent_rep_value_invalid;
	rhs = r_cnd_pub_sub_flag;
	}

//condition = cv&&(cf&&(!(cv&&psf)))
RESOURCE SSM_CND_LOGICAL_AND r_cnd_nested3
	{
	lhs = r_cnd_cent_rep_value;
	rhs = r_cnd_nested1;
	}

//condition = !(cv||psf)
RESOURCE SSM_CND_LOGICAL_NOT r_cnd_nested4
	{
	sub_condition = r_cnd_nested2;
	}

//condition = (cv&&(cf&&(!(cv&&psf)))) || psv
RESOURCE SSM_CND_LOGICAL_OR r_cnd_nested5
	{
	lhs = r_cnd_nested3;
	rhs = r_cnd_pub_sub_value;
	}

//condition = (!(cv||psf)) && ((cv&&(cf&&(!(cv&&psf)))) || psv)
RESOURCE SSM_CND_LOGICAL_AND r_cnd_nested
	{
	lhs = r_cnd_nested4;
	rhs = r_cnd_nested5;
	}

//end nested condition//

//
//condition = cf&&cv
RESOURCE SSM_CND_LOGICAL_AND r_cnd_cf_and_cv	
	{
	lhs = r_cnd_cent_rep_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_cent_rep_value;	//< Right-hand side of the AND expression. 
	}
	
//Condition = cf&&ff
RESOURCE SSM_CND_LOGICAL_AND r_cnd_cf_and_ff
	{
	lhs = r_cnd_cent_rep_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_feature_flag;	//< Right-hand side of the AND expression. 
	}
//Condition = cf&&ff
RESOURCE SSM_CND_LOGICAL_AND r_cnd_cf_and_fv
	{
	lhs = r_cnd_cent_rep_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_feature_value;	//< Right-hand side of the AND expression. 
	}
//Condition = cf&&psf
RESOURCE SSM_CND_LOGICAL_AND r_cnd_cf_and_psf
	{
	lhs = r_cnd_cent_rep_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_flag;	//< Right-hand side of the AND expression. 
	}
//Condition = cf&&psv
RESOURCE SSM_CND_LOGICAL_AND r_cnd_cf_and_psv
	{
	lhs = r_cnd_cent_rep_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_value;	//< Right-hand side of the AND expression. 
	}
//
//Condition = cv&&ff
RESOURCE SSM_CND_LOGICAL_AND r_cnd_cv_and_ff
	{
	lhs = r_cnd_cent_rep_value;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_feature_flag;	//< Right-hand side of the AND expression. 
	}
//Condition = cv&&fv
RESOURCE SSM_CND_LOGICAL_AND r_cnd_cv_and_fv
	{
	lhs = r_cnd_cent_rep_value;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_feature_value;	//< Right-hand side of the AND expression. 
	}
//Condition = cv&&psf
RESOURCE SSM_CND_LOGICAL_AND r_cnd_cv_and_psf
	{
	lhs = r_cnd_cent_rep_value;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_flag;	//< Right-hand side of the AND expression. 
	}
//Condition = cv&&psv
RESOURCE SSM_CND_LOGICAL_AND r_cnd_cv_and_psv
	{
	lhs = r_cnd_cent_rep_value;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_value;	//< Right-hand side of the AND expression. 
	}

//
//Condition = ff&&fv
RESOURCE SSM_CND_LOGICAL_AND r_cnd_ff_and_fv
	{
	lhs = r_cnd_feature_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_feature_value;	//< Right-hand side of the AND expression. 
	}
//Condition = ff&&psf
RESOURCE SSM_CND_LOGICAL_AND r_cnd_ff_and_psf
	{
	lhs = r_cnd_feature_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_flag;	//< Right-hand side of the AND expression. 
	}
//Condition = ff&&psv
RESOURCE SSM_CND_LOGICAL_AND r_cnd_ff_and_psv
	{
	lhs = r_cnd_feature_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_value;	//< Right-hand side of the AND expression. 
	}

//
//Condition = fv && psf
RESOURCE SSM_CND_LOGICAL_AND r_cnd_fv_and_psf
	{
	lhs  = r_cnd_feature_value;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_flag;	//< Right-hand side of the AND expression. 
	}
//Condition = fv && psv
RESOURCE SSM_CND_LOGICAL_AND r_cnd_fv_and_psv
	{
	lhs  = r_cnd_feature_value;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_value;	//< Right-hand side of the AND expression. 
	}

//
//Condition = psf&&psv
RESOURCE SSM_CND_LOGICAL_AND r_cnd_psf_and_psv
	{
	lhs = r_cnd_pub_sub_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_value;	//< Right-hand side of the AND expression. 
	}

//
//Condition = cf || cv
RESOURCE SSM_CND_LOGICAL_OR r_cnd_cf_or_cv	
	{
	lhs = r_cnd_cent_rep_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_cent_rep_value;	//< Right-hand side of the AND expression. 
	}
//Condition = cf || ff
RESOURCE SSM_CND_LOGICAL_OR r_cnd_cf_or_ff
	{
	lhs = r_cnd_cent_rep_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_feature_flag;	//< Right-hand side of the AND expression. 
	}
//Condition = cf || fv
RESOURCE SSM_CND_LOGICAL_OR r_cnd_cf_or_fv
	{
	lhs = r_cnd_cent_rep_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_feature_value;	//< Right-hand side of the AND expression. 
	}
//Condition = cf || psf
RESOURCE SSM_CND_LOGICAL_OR r_cnd_cf_or_psf
	{
	lhs = r_cnd_cent_rep_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_flag;	//< Right-hand side of the AND expression. 
	}
//Condition = cf || psv
RESOURCE SSM_CND_LOGICAL_OR r_cnd_cf_or_psv
	{
	lhs = r_cnd_cent_rep_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_value;	//< Right-hand side of the AND expression. 
	}
//
//Condition = cv || ff
RESOURCE SSM_CND_LOGICAL_OR r_cnd_cv_or_ff
	{
	lhs = r_cnd_cent_rep_value;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_feature_flag;	//< Right-hand side of the AND expression. 
	}
//Condition = cv || fv
RESOURCE SSM_CND_LOGICAL_OR r_cnd_cv_or_fv
	{
	lhs = r_cnd_cent_rep_value;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_feature_value;	//< Right-hand side of the AND expression. 
	}
//Condition = cv || psf
RESOURCE SSM_CND_LOGICAL_OR r_cnd_cv_or_psf
	{
	lhs = r_cnd_cent_rep_value;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_flag;	//< Right-hand side of the AND expression. 
	}
//Condition = cv || psv
RESOURCE SSM_CND_LOGICAL_OR r_cnd_cv_or_psv
	{
	lhs = r_cnd_cent_rep_value;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_value;	//< Right-hand side of the AND expression. 
	}

//
//Condition = ff || fv
RESOURCE SSM_CND_LOGICAL_OR r_cnd_ff_or_fv
	{
	lhs = r_cnd_feature_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_feature_value;	//< Right-hand side of the AND expression. 
	}
//Condition = ff || psf
RESOURCE SSM_CND_LOGICAL_OR r_cnd_ff_or_psf
	{
	lhs = r_cnd_feature_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_flag;	//< Right-hand side of the AND expression. 
	}
//Condition = ff || psv
RESOURCE SSM_CND_LOGICAL_OR r_cnd_ff_or_psv
	{
	lhs = r_cnd_feature_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_value;	//< Right-hand side of the AND expression. 
	}

//
//Condition = fv || psf
RESOURCE SSM_CND_LOGICAL_OR r_cnd_fv_or_psf
	{
	lhs = r_cnd_feature_value;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_flag;	//< Right-hand side of the AND expression. 
	}
//Condition = fv || psv
RESOURCE SSM_CND_LOGICAL_OR r_cnd_fv_or_psv
	{
	lhs = r_cnd_feature_value;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_value;	//< Right-hand side of the AND expression. 
	}

//Condition = psf || psv
RESOURCE SSM_CND_LOGICAL_OR r_cnd_psf_or_psv
	{
	lhs = r_cnd_pub_sub_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_value;	//< Right-hand side of the AND expression. 
	}



//
//Condition = !cf
RESOURCE SSM_CND_LOGICAL_NOT r_cnd_not_cf
	{
	sub_condition  = r_cnd_cent_rep_flag;	//< Left-hand side of the AND expression. 
	}
//Condition = !cv
RESOURCE SSM_CND_LOGICAL_NOT r_cnd_not_cv	
	{
	sub_condition  = r_cnd_cent_rep_value;	//< Left-hand side of the AND expression. 
	}
//Condition = !ff
RESOURCE SSM_CND_LOGICAL_NOT r_cnd_not_ff
	{
	sub_condition  = r_cnd_feature_flag;	//< Left-hand side of the AND expression. 
	}
//Condition = !fv
RESOURCE SSM_CND_LOGICAL_NOT r_cnd_not_fv	
	{
	sub_condition  = r_cnd_feature_value;	//< Left-hand side of the AND expression. 
	}
//Condition = !psf
RESOURCE SSM_CND_LOGICAL_NOT r_cnd_not_psf	
	{
	sub_condition  = r_cnd_pub_sub_flag;	//< Left-hand side of the AND expression. 
	}
//Condition = !psv
RESOURCE SSM_CND_LOGICAL_NOT r_cnd_not_psv	
	{
	sub_condition  = r_cnd_pub_sub_value;	//< Left-hand side of the AND expression. 
	}

//
RESOURCE SSM_CND_PUB_SUB_FLAG r_cnd_pub_sub_flag
	{
	category = 0x2000D75B;           //< An UID identifying the property category.
	key = 0x0012AC;                //< Identifies the specific property within the category.
	bitmask = 0x0010;            //< Defines the bits of the key value to check.
	}

RESOURCE SSM_CND_PUB_SUB_VALUE r_cnd_pub_sub_value
	{
	category = 0x2000D75B;             //< An UID identifying the property category.
	key = 0x0012AC;                  //< Identifies the specific property within the category.
	value = 0x1010;		 //< The value read from the P&S key will be compared to this value.
	}

//Feature manager conditions
RESOURCE SSM_CND_FEATURE_VALUE r_cnd_feature_flag
	{
    	feature_id = 0x2001D2A6;
	}

RESOURCE SSM_CND_FEATURE_DATA_VALUE r_cnd_feature_value
	{
	feature_id = 0x2001D2A6;
	datavalue = 0;
	}

//Central repository conditions
RESOURCE SSM_CND_CENT_REP_VALUE r_cnd_cent_rep_value
	{
	repository_id = 0x2001D2A8;
	key = 0x011;
	value = 0x1010;
	}

RESOURCE SSM_CND_CENT_REP_FLAG r_cnd_cent_rep_flag
	{
	repository_id = 0x2001D2A8;
	key = 0x011;
	bitmask = 0x0010;
	}
RESOURCE SSM_CND_CENT_REP_VALUE r_cnd_cent_rep_value_invalid
	{
	repository_id = 0x2001D2A8;
	key = 0x011;
	value = 0x1000;
	}	

