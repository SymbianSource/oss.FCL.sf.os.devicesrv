// Copyright (c) 2008-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
// tconditionevaluator_swp_commandlist.rss
// 
//

#include <ssm/ssmcmd.rh>
#include <ssm/conditionresourcetypes.rh>
#include "tconditionevaluator_commandlist.hrh"

UID2 KUidSsmCommandListResourceFile

// SSM_COMMAND_LIST_ROOT must be the first resource in a command list resource file.
// The SSM relies on this having a resource ID of 1.
RESOURCE SSM_COMMAND_LIST_ROOT
	{
	command_list_mapping = r_command_list_mapping;
	}

RESOURCE SSM_COMMAND_LIST_MAPPING r_command_list_mapping
	{
	mappings =
		{
		SSM_COMMANDLISTID_TO_RESOURCEID
			{
			command_list_id = EConditionalCommandsList;
			resource_id = r_conditional_command_list;
			},
		SSM_COMMANDLISTID_TO_RESOURCEID
			{
			command_list_id = ENestedConditionalCommandsList;
			resource_id = r_conditional_nested_command_list;
			},
		SSM_COMMANDLISTID_TO_RESOURCEID
			{
			command_list_id = ERecuesiveConditionalCommandsList;
			resource_id = r_conditional_recursive_command_list;
			}
		};
	}

RESOURCE SSM_COMMAND_LIST r_conditional_command_list
	{
	commands =
		{
		r_command_evaluate_cond_1,
		r_command_evaluate_cond_3,
		r_command_evaluate_cond_5,
		r_command_evaluate_cond_7,
		r_command_evaluate_cond_9,
		r_command_evaluate_cond_11,
		r_command_evaluate_cond_13,		
		r_command_evaluate_cond_15,
		r_command_evaluate_cond_17,
		r_command_evaluate_cond_19,
		r_command_evaluate_cond_21,
		r_command_evaluate_cond_23,
		r_command_evaluate_cond_25,
		r_command_evaluate_cond_27,
		r_command_evaluate_cond_29,
		r_command_evaluate_cond_31,
		r_command_evaluate_cond_33,
		r_command_evaluate_cond_35,
		r_command_evaluate_cond_37,
		r_command_evaluate_cond_38,
		r_command_evaluate_cond_39,
		r_command_evaluate_cond_40,
		r_command_evaluate_cond_41,
		r_command_evaluate_cond_42,
		r_publish_swp_command
		};
	}

RESOURCE SSM_COMMAND_LIST r_conditional_nested_command_list
	{
	commands =
		{
		r_command_evaluate_nested_cond_1,
		r_command_evaluate_nested_cond_2,
		r_publish_swp_command
		};
	}

RESOURCE SSM_COMMAND_LIST r_conditional_recursive_command_list
	{
	commands =
		{
		r_command_evaluate_recursive_cond,
		r_publish_swp_command
		};
	}

RESOURCE SSM_PUBLISH_SYSTEM_WIDE_PROPERTY r_publish_swp_command
	{
	severity = ECmdCriticalSeverity;
	priority = 5;
	}

//nested comdition//
RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_nested_cond_1
	{
	conditional_information = r_cnd_nested;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition43;
	value = 1;
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_nested_cond_2
	{
	conditional_information = r_cnd_nested5;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition44;
	value = 1;
	}
//end of nested conditions//

//recursive condition//
RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_recursive_cond
	{
	conditional_information = r_cnd_recursive;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition45;
	value = 1;
	}

// end of recursive condition//

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_1
	{
	conditional_information = r_cnd_cf_and_cv;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition1;
	value = 1;
	priority = 420;
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_3
	{
	conditional_information = r_cnd_cf_and_fv;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition3;
	value = 1;
	priority = 400;
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_5
	{
	conditional_information = r_cnd_cf_and_psv;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition5;
	value = 1;
	priority = 380;
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_7
	{
	conditional_information = r_cnd_cv_and_fv;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition7;
	value = 1;
	priority = 360;
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_9
	{
	conditional_information = r_cnd_cv_and_psv;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition9;
	value = 1;
	priority = 340;
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_11
	{
	conditional_information = r_cnd_ff_and_psf;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition11;
	value = 1;
	priority = 320;
	}
	
RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_13
	{
	conditional_information = r_cnd_fv_and_psf;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition13;
	value = 1;
	priority = 300;
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_15
	{
	conditional_information = r_cnd_psf_and_psv;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition15;
	value = 1;
	priority = 280;
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_17
	{
	conditional_information = r_cnd_cf_or_ff;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition17;
	value = 1;
	priority = 260;
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_19
	{
	conditional_information = r_cnd_cf_or_psf;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition19;
	value = 1;
	priority = 240;
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_21
	{
	conditional_information = r_cnd_cv_or_ff;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition21;
	value = 1;
	priority = 220;
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_23
	{
	conditional_information = r_cnd_cv_or_psf;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition23;
	value = 1;
	priority = 200;
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_25
	{
	conditional_information = r_cnd_ff_or_fv;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition25;
	value = 1;
	priority = 180;
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_27
	{
	conditional_information = r_cnd_ff_or_psv;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition27;
	value = 1;
	priority = 160;
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_29
	{
	conditional_information = r_cnd_fv_or_psv;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition29;
	value = 1;
	priority = 140;
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_31
	{
	conditional_information = r_cnd_cent_rep_flag;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition31;
	value = 1;
	priority = 120;
	}
RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_33
	{
	conditional_information = r_cnd_feature_value;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition33;
	value = 1;
	priority = 100;
	}
RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_35
	{
	conditional_information = r_cnd_pub_sub_value;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition35;
	value = 1;
	priority = 80;
	}

RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_37
	{
	conditional_information = r_cnd_not_cf;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition37;
	value = 1;
	priority = 60;
	}
RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_38
	{
	conditional_information = r_cnd_not_cv;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition38;
	value = 1;
	priority = 50;
	}
RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_39
	{
	conditional_information = r_cnd_not_ff;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition39;
	value = 1;
	priority = 40;
	}
RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_40
	{
	conditional_information = r_cnd_not_fv;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition40;
	value = 1;
	priority = 30;
	}
RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_41
	{
	conditional_information = r_cnd_not_psf;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition41;
	value = 1;
	priority = 20;
	}
RESOURCE SSM_SET_PUBLISH_AND_SUBSCRIBE r_command_evaluate_cond_42
	{
	conditional_information = r_cnd_not_psv;
	severity = ECmdCriticalSeverity;
	category = 0x2000D75B;
	key = EPropertyCondition42;
	value = 1;
	priority = 10;
	}
//recursive//
RESOURCE SSM_CND_LOGICAL_AND r_cnd_recursive
	{
	lhs = r_cnd_pub_sub_value;
	rhs = r_cnd_recursive;
	}
//end of recursive//


//nested condition//
//condition = cf&&(!(cv&&psf))
RESOURCE SSM_CND_LOGICAL_AND r_cnd_nested1
	{
	lhs = r_cnd_cent_rep_flag;
	rhs = r_cnd_nested4;
	}

//condition = cv||psf
RESOURCE SSM_CND_LOGICAL_OR r_cnd_nested2
	{
	lhs = r_cnd_cent_rep_value_invalid;
	rhs = r_cnd_pub_sub_flag;
	}

//condition = cv&&(cf&&(!(cv&&psf)))
RESOURCE SSM_CND_LOGICAL_AND r_cnd_nested3
	{
	lhs = r_cnd_cent_rep_value;
	rhs = r_cnd_nested1;
	}

//condition = !(cv||psf)
RESOURCE SSM_CND_LOGICAL_NOT r_cnd_nested4
	{
	sub_condition = r_cnd_nested2;
	}

//condition = (cv&&(cf&&(!(cv&&psf)))) || psv
RESOURCE SSM_CND_LOGICAL_OR r_cnd_nested5
	{
	lhs = r_cnd_nested3;
	rhs = r_cnd_pub_sub_value;
	}

//condition = (!(cv||psf)) && ((cv&&(cf&&(!(cv&&psf)))) || psv)
RESOURCE SSM_CND_LOGICAL_AND r_cnd_nested
	{
	lhs = r_cnd_nested4;
	rhs = r_cnd_nested5;
	}

//end nested condition//

//
//condition = cf&&cv
RESOURCE SSM_CND_LOGICAL_AND r_cnd_cf_and_cv	
	{
	lhs = r_cnd_cent_rep_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_cent_rep_value;	//< Right-hand side of the AND expression. 
	}
	
//Condition = cf&&ff
RESOURCE SSM_CND_LOGICAL_AND r_cnd_cf_and_ff
	{
	lhs = r_cnd_cent_rep_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_feature_flag;	//< Right-hand side of the AND expression. 
	}
//Condition = cf&&ff
RESOURCE SSM_CND_LOGICAL_AND r_cnd_cf_and_fv
	{
	lhs = r_cnd_cent_rep_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_feature_value;	//< Right-hand side of the AND expression. 
	}
//Condition = cf&&psf
RESOURCE SSM_CND_LOGICAL_AND r_cnd_cf_and_psf
	{
	lhs = r_cnd_cent_rep_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_flag;	//< Right-hand side of the AND expression. 
	}
//Condition = cf&&psv
RESOURCE SSM_CND_LOGICAL_AND r_cnd_cf_and_psv
	{
	lhs = r_cnd_cent_rep_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_value;	//< Right-hand side of the AND expression. 
	}
//
//Condition = cv&&ff
RESOURCE SSM_CND_LOGICAL_AND r_cnd_cv_and_ff
	{
	lhs = r_cnd_cent_rep_value;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_feature_flag;	//< Right-hand side of the AND expression. 
	}
//Condition = cv&&fv
RESOURCE SSM_CND_LOGICAL_AND r_cnd_cv_and_fv
	{
	lhs = r_cnd_cent_rep_value;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_feature_value;	//< Right-hand side of the AND expression. 
	}
//Condition = cv&&psf
RESOURCE SSM_CND_LOGICAL_AND r_cnd_cv_and_psf
	{
	lhs = r_cnd_cent_rep_value;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_flag;	//< Right-hand side of the AND expression. 
	}
//Condition = cv&&psv
RESOURCE SSM_CND_LOGICAL_AND r_cnd_cv_and_psv
	{
	lhs = r_cnd_cent_rep_value;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_value;	//< Right-hand side of the AND expression. 
	}

//
//Condition = ff&&fv
RESOURCE SSM_CND_LOGICAL_AND r_cnd_ff_and_fv
	{
	lhs = r_cnd_feature_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_feature_value;	//< Right-hand side of the AND expression. 
	}
//Condition = ff&&psf
RESOURCE SSM_CND_LOGICAL_AND r_cnd_ff_and_psf
	{
	lhs = r_cnd_feature_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_flag;	//< Right-hand side of the AND expression. 
	}
//Condition = ff&&psv
RESOURCE SSM_CND_LOGICAL_AND r_cnd_ff_and_psv
	{
	lhs = r_cnd_feature_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_value;	//< Right-hand side of the AND expression. 
	}

//
//Condition = fv && psf
RESOURCE SSM_CND_LOGICAL_AND r_cnd_fv_and_psf
	{
	lhs  = r_cnd_feature_value;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_flag;	//< Right-hand side of the AND expression. 
	}
//Condition = fv && psv
RESOURCE SSM_CND_LOGICAL_AND r_cnd_fv_and_psv
	{
	lhs  = r_cnd_feature_value;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_value;	//< Right-hand side of the AND expression. 
	}

//
//Condition = psf&&psv
RESOURCE SSM_CND_LOGICAL_AND r_cnd_psf_and_psv
	{
	lhs = r_cnd_pub_sub_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_value;	//< Right-hand side of the AND expression. 
	}

//
//Condition = cf || cv
RESOURCE SSM_CND_LOGICAL_OR r_cnd_cf_or_cv	
	{
	lhs = r_cnd_cent_rep_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_cent_rep_value;	//< Right-hand side of the AND expression. 
	}
//Condition = cf || ff
RESOURCE SSM_CND_LOGICAL_OR r_cnd_cf_or_ff
	{
	lhs = r_cnd_cent_rep_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_feature_flag;	//< Right-hand side of the AND expression. 
	}
//Condition = cf || fv
RESOURCE SSM_CND_LOGICAL_OR r_cnd_cf_or_fv
	{
	lhs = r_cnd_cent_rep_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_feature_value;	//< Right-hand side of the AND expression. 
	}
//Condition = cf || psf
RESOURCE SSM_CND_LOGICAL_OR r_cnd_cf_or_psf
	{
	lhs = r_cnd_cent_rep_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_flag;	//< Right-hand side of the AND expression. 
	}
//Condition = cf || psv
RESOURCE SSM_CND_LOGICAL_OR r_cnd_cf_or_psv
	{
	lhs = r_cnd_cent_rep_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_value;	//< Right-hand side of the AND expression. 
	}
//
//Condition = cv || ff
RESOURCE SSM_CND_LOGICAL_OR r_cnd_cv_or_ff
	{
	lhs = r_cnd_cent_rep_value;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_feature_flag;	//< Right-hand side of the AND expression. 
	}
//Condition = cv || fv
RESOURCE SSM_CND_LOGICAL_OR r_cnd_cv_or_fv
	{
	lhs = r_cnd_cent_rep_value;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_feature_value;	//< Right-hand side of the AND expression. 
	}
//Condition = cv || psf
RESOURCE SSM_CND_LOGICAL_OR r_cnd_cv_or_psf
	{
	lhs = r_cnd_cent_rep_value;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_flag;	//< Right-hand side of the AND expression. 
	}
//Condition = cv || psv
RESOURCE SSM_CND_LOGICAL_OR r_cnd_cv_or_psv
	{
	lhs = r_cnd_cent_rep_value;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_value;	//< Right-hand side of the AND expression. 
	}

//
//Condition = ff || fv
RESOURCE SSM_CND_LOGICAL_OR r_cnd_ff_or_fv
	{
	lhs = r_cnd_feature_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_feature_value;	//< Right-hand side of the AND expression. 
	}
//Condition = ff || psf
RESOURCE SSM_CND_LOGICAL_OR r_cnd_ff_or_psf
	{
	lhs = r_cnd_feature_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_flag;	//< Right-hand side of the AND expression. 
	}
//Condition = ff || psv
RESOURCE SSM_CND_LOGICAL_OR r_cnd_ff_or_psv
	{
	lhs = r_cnd_feature_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_value;	//< Right-hand side of the AND expression. 
	}

//
//Condition = fv || psf
RESOURCE SSM_CND_LOGICAL_OR r_cnd_fv_or_psf
	{
	lhs = r_cnd_feature_value;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_flag;	//< Right-hand side of the AND expression. 
	}
//Condition = fv || psv
RESOURCE SSM_CND_LOGICAL_OR r_cnd_fv_or_psv
	{
	lhs = r_cnd_feature_value;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_value;	//< Right-hand side of the AND expression. 
	}

//Condition = psf || psv
RESOURCE SSM_CND_LOGICAL_OR r_cnd_psf_or_psv
	{
	lhs = r_cnd_pub_sub_flag;	//< Left-hand side of the AND expression. 
	rhs = r_cnd_pub_sub_value;	//< Right-hand side of the AND expression. 
	}



//
//Condition = !cf
RESOURCE SSM_CND_LOGICAL_NOT r_cnd_not_cf
	{
	sub_condition  = r_cnd_cent_rep_flag;	//< Left-hand side of the AND expression. 
	}
//Condition = !cv
RESOURCE SSM_CND_LOGICAL_NOT r_cnd_not_cv	
	{
	sub_condition  = r_cnd_cent_rep_value;	//< Left-hand side of the AND expression. 
	}
//Condition = !ff
RESOURCE SSM_CND_LOGICAL_NOT r_cnd_not_ff
	{
	sub_condition  = r_cnd_feature_flag;	//< Left-hand side of the AND expression. 
	}
//Condition = !fv
RESOURCE SSM_CND_LOGICAL_NOT r_cnd_not_fv	
	{
	sub_condition  = r_cnd_feature_value;	//< Left-hand side of the AND expression. 
	}
//Condition = !psf
RESOURCE SSM_CND_LOGICAL_NOT r_cnd_not_psf	
	{
	sub_condition  = r_cnd_pub_sub_flag;	//< Left-hand side of the AND expression. 
	}
//Condition = !psv
RESOURCE SSM_CND_LOGICAL_NOT r_cnd_not_psv	
	{
	sub_condition  = r_cnd_pub_sub_value;	//< Left-hand side of the AND expression. 
	}

//
RESOURCE SSM_CND_PUB_SUB_FLAG r_cnd_pub_sub_flag
	{
	category = 0x2000D75B;           //< An UID identifying the property category.
	key = 0x0012AC;                //< Identifies the specific property within the category.
	bitmask = 0x0010;            //< Defines the bits of the key value to check.
	}

RESOURCE SSM_CND_PUB_SUB_VALUE r_cnd_pub_sub_value
	{
	category = 0x2000D75B;             //< An UID identifying the property category.
	key = 0x0012AC;                  //< Identifies the specific property within the category.
	value = 0x1010;		 //< The value read from the P&S key will be compared to this value.
	}

//Feature manager conditions
RESOURCE SSM_CND_FEATURE_VALUE r_cnd_feature_flag
	{
    	feature_id = 0x2001D2A6;
	}

RESOURCE SSM_CND_FEATURE_DATA_VALUE r_cnd_feature_value
	{
	feature_id = 0x2001D2A6;
	datavalue = 0;
	}

//Central repository conditions
RESOURCE SSM_CND_CENT_REP_VALUE r_cnd_cent_rep_value
	{
	repository_id = 0x2001D2A8;
	key = 0x011;
	value = 0x1010;
	}

RESOURCE SSM_CND_CENT_REP_FLAG r_cnd_cent_rep_flag
	{
	repository_id = 0x2001D2A8;
	key = 0x011;
	bitmask = 0x0010;
	}
RESOURCE SSM_CND_CENT_REP_VALUE r_cnd_cent_rep_value_invalid
	{
	repository_id = 0x2001D2A8;
	key = 0x011;
	value = 0x1000;
	}	

