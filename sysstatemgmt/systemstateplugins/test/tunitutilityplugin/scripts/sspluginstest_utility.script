// Copyright (c) 2008-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//

PRINT Run UtilityPluginFailStep tests

LOAD_SUITE tutilityplugin_server

START_TESTCASE 			DEVSRVS-SSPLUGINS-UTILITYPLUGINS-0001
//! @SYMTestCaseID 		DEVSRVS-SSPLUGINS-UTILITYPLUGINS-0001
//! @SYMPREQ			PREQ2326
//! @SYMREQ			REQ10976 REQ9110 REQ9120 REQ9155 REQ9158
//! @SYMTestType		IT
//! @SYMTestPriority		Critical
//! @SYMTestStatus 		Implemented
//! @SYMTestCaseDesc		Integration test for ESwitchOff event.
//! 				Integration test for ERestartSystem event.
//! 				Integration test for Standby event.
//! 				Integration test for an event which does not shutdown the system.
//! 				Integration test for delaying a shutdown transition.
//! 				Integration test to cancel a shutdown transition.
//! 				Integration test which doesn't acknowledge a shutdown notification.
//! 					This is not an automated test. Should be run manually to understand the behaviour.
//! @SYMTestActions		doTest1L() Performs following actions,
//! 				- Create state aware session and register for state change notification
//! 				- Generate a KeySwitchOff event
//! 				- Check for notification
//! 				doTest2L() Performs following actions,
//! 				- Create state aware session and register for state change notification
//! 				- Generate a ERestartSystem event
//! 				- Check for notification
//! 				doTest3L() Performs following actions,
//! 				- Create state aware session and register for state change notification
//! 				- Generate a ESwitchOff event
//! 				- Check for notification
//! 				doTest4L() Performs following actions,
//! 				- Create state aware session and register for state change notification
//! 				- Generate a ECaseClose event which is not a shutdown event
//! 				- Start a timer and wait for 10 seconds, can be any number in future
//! 				- Check if notification is received
//! 				doTest5L() Performs following actions,
//! 				- Create state aware session and register for state change notification
//! 				- Generate a ESwitchOff event
//! 				- Check for notification
//! 				- On notification delay acknowledgement by adding INFO_PRINTS. Now acknowledge.
//! 				doTest6L() Performs following actions,
//! 				- Create state aware session and register for state change notification
//! 				- Generate a ESwitchOff event
//! 				- Cancel state transition
//! 				doTest7L() Performs following actions,
//! 				- Create state aware session and register for state change notification
//! 				- Generate a ESwitchOff event
//! 				- On shutdown notification don't acknowledge 				
//! @SYMTestExpectedResults	Test should get notifications for shutdown substate transition and power state should be changed to EPwStandby
//! 				Test should get notifications for shutdown substate transition and power state should be changed to EPwRestart
//! 				Test should get notifications for shutdown substate transition and power state should be changed to EPwStandby
//! 				Test should not receive any notification and power state should remain the same.
//! 				Power state should be changed to EPwStandby
//! 				State transition should not be cancelled. Notification should be received and Power state should be changed to EPwStandby.
//! 				A timeout will occur and system will move to Fail state and poweroff the device.
RUN_TEST_STEP 100 tutilityplugin_server UtilityPluginStep
END_TESTCASE 			DEVSRVS-SSPLUGINS-UTILITYPLUGINS-0001

