// Copyright (c) 2008-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//

#include "conditionresourcetypes.rh"

//Publish subscribe conditions
RESOURCE SSM_CND_PUB_SUB_VALUE r_cnd_ps_value
    {
    category = 0x2001D2A6;
	key = 0x1;
	value = 0x1010;
    }


RESOURCE SSM_CND_PUB_SUB_FLAG r_cnd_ps_flag
	{
    category = 0x2001D2A6;
	key = 0x1;
	bitmask = 0x0010;
	}

//Central repository conditions
RESOURCE SSM_CND_CENT_REP_VALUE r_cnd_cr_value_valid
    {
    repository_id = 0x2001D2A6;
	key = 0x010;
	value = 0x1010;
    }


RESOURCE SSM_CND_CENT_REP_FLAG r_cnd_cr_flag_valid
	{
    repository_id = 0x2001D2A6;
	key = 0x010;
	bitmask = 0x0010;
	}

RESOURCE SSM_CND_CENT_REP_VALUE r_cnd_cr_value_invalid
    {
    repository_id = 0x2001D2A6;
	key = 0x010;
	value = 0x1110;
    }


RESOURCE SSM_CND_CENT_REP_FLAG r_cnd_cr_flag_invalid
	{
    repository_id = 0x2001D2A6;
	key = 0x010;
	bitmask = 0x0110;
	}

//Feature manager conditions
RESOURCE SSM_CND_FEATURE_VALUE r_cnd_fm_value_invalid
	{
    feature_id = 0x2001D2A7;
	}

RESOURCE SSM_CND_FEATURE_DATA_VALUE r_cnd_fm_data_value_invalid
	{
    feature_id = 0x2001D2A6;
	datavalue = 1001;
	}

RESOURCE SSM_CND_FEATURE_VALUE r_cnd_fm_value
	{
    feature_id = 0x2001D2A6;
	}

RESOURCE SSM_CND_FEATURE_DATA_VALUE r_cnd_fm_data_value
	{
    feature_id = 0x2001D2A6;
	datavalue = 0;
	}

//Logical and condition
RESOURCE SSM_CND_LOGICAL_AND r_cnd_logical_and
	{
	lhs = r_cnd_cr_flag_valid;
	rhs = r_cnd_ps_value;
	}

//Logical or conditions
RESOURCE SSM_CND_LOGICAL_OR r_cnd_logical_or_both_valid
	{
	lhs = r_cnd_cr_flag_valid;
	rhs = r_cnd_ps_value;
	}

RESOURCE SSM_CND_LOGICAL_OR r_cnd_logical_or_valid1
	{
	lhs = r_cnd_cr_value_invalid;
	rhs = r_cnd_ps_value;
	}

RESOURCE SSM_CND_LOGICAL_OR r_cnd_logical_or_valid2
	{
	lhs = r_cnd_cr_value_valid;
	rhs = r_cnd_ps_value;
	}

RESOURCE SSM_CND_LOGICAL_OR r_cnd_logical_or_both_invalid
	{
	lhs = r_cnd_cr_value_invalid;
	rhs = r_cnd_ps_value;
	}

//Logical not condition
RESOURCE SSM_CND_LOGICAL_NOT r_cnd_logical_not1
	{
	sub_condition = r_cnd_cr_value_invalid;
	}

RESOURCE SSM_CND_LOGICAL_NOT r_cnd_logical_not2
	{
	sub_condition = r_cnd_cr_flag_valid;
	}

//Used for nested testing
RESOURCE SSM_CND_LOGICAL_OR r_cnd_nested1
	{
	lhs = r_cnd_cr_flag_valid;
	rhs = r_cnd_nested4;
	}

RESOURCE SSM_CND_LOGICAL_OR r_cnd_nested2
	{
	lhs = r_cnd_cr_value_invalid;
	rhs = r_cnd_ps_value;
	}

RESOURCE SSM_CND_LOGICAL_AND r_cnd_nested3
	{
	lhs = r_cnd_cr_value_valid;
	rhs = r_cnd_nested1;
	}

RESOURCE SSM_CND_LOGICAL_NOT r_cnd_nested4
	{
	sub_condition = r_cnd_nested2;
	}

RESOURCE SSM_CND_LOGICAL_AND r_cnd_nested5
	{
	lhs = r_cnd_nested3;
	rhs = r_cnd_cr_value_valid;
	}

RESOURCE SSM_CND_LOGICAL_AND r_cnd_nested
	{
	lhs = r_cnd_nested4;
	rhs = r_cnd_nested5;
	}

//system wide property value conditions
RESOURCE SSM_CND_SWP_VALUE r_cnd_swp_value
	{
	key = 0x2;
	value = 0x1010;
	}

//system wide property flag conditions
RESOURCE SSM_CND_SWP_FLAG r_cnd_swp_flag
	{
	key = 0x2;
	bitmask = 0x0010;
	}

