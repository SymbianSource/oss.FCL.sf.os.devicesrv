// Copyright (c) 2007-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//

PRINT Run StartSafe test 

LOAD_SUITE tss_server

START_TESTCASE 			DEVSRVS-SSMA-STARTSAFE-0015
//! @SYMTestCaseID 		DEVSRVS-SSMA-STARTSAFE-0015
//! @SYMPREQ 			PREQ1871
//! @SYMTestType		UT
//! @SYMTestPriority		Critical
//! @SYMTestStatus 		Implemented
//! @SYMTestCaseDesc		Check that error/leave codes are as anticipated &c.
//! @SYMTestActions		Present SsmStartSafe with several erroneous scenarios.
//! 					1.Make a call to StartAndMonitorL() without supplying the monitoring flag
//! 					2.Start a process supplying NULL filename
//! 					3.Start app supplying NULL filename
//! 					4.Start Process supplying a fictitious filename
//! 					5.Start app supplying fictitious filename
//! 					6.Try to start a test app supplying a TStartupType enumeration which is out of range.
//! 					7.Try to start a test app supplying a TStartMethod enumeration which is out of range.
//! 					8.Attempt startup supplying a negative timeout
//! 					9.Attempt startup supplying negative retries
//! 					10.Attempt startup (supplying negative retries) of an app which will fail once then run correctly after one retry.
//! 					11.Attempt Fire-and-forget supplying NULL filename
//! 					12.Check index value on return from StartCancel(). Check index value on return from StartCancel() if a bad value of index is supplied
//! 					13.Start as an app ssmtestapppaniczero.exe which panics with an error code of KErrNone.
//! 					14.Start as a process ssmtestapppaniczero.exe which panics with an error code of KErrNone.
//! 					15.Start as an app ssmtestapppanic.exe which panics with a unique error code.
//! 					16.Start as a process ssmtestapppanic.exe which panics with a unique error.
//! 					17.OOM allocation test.
//! @SYMTestExpectedResults 	Correct error codes are supplied and logged
//! 					1.StartSafe supplies KErrArgument.
//! 					2.Error KErrNotFound is supplied
//! 					3.KErrNotSupported is supplied
//! 					4.KErrNotFound is supplied.
//! 					5.KErrNotFound is supplied
//! 					6.KErrArgument is supplied
//! 					7.KErrArgument is supplied
//! 					8.The negative timeout is interpreted as zero.
//! 					9.The negative retries is treated as zero. The test app starts
//! 					10.The app is not started because the –ve retries is interpreted as zero retries.
//! 					11.Completion code KErrArgument should be supplied.
//! 					12.good call results in index == -9999. Bad call results in KErrArgument
//! 					13.Ensure rv code is KErrGeneral
//! 					14.Ensure rv code is KErrGeneral
//! 					15.Ensure the error code is the anticipated value.
//! 					16.Ensure the error code is the anticipated value.
//! 					17.Allocation and leaves are performed satisfactorily under OOM conditions
RUN_TEST_STEP 100 tss_server StartSafeErrors
END_TESTCASE 				DEVSRVS-SSMA-STARTSAFE-0015
