// Copyright (c) 2007-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
// Test publish swp
// 
//

#include <ssm/ssmcmd.rh>

// valid struct
RESOURCE SSM_PUBLISH_SYSTEM_STATE r_command_publish_sysstate1
	{
	severity = ECmdCriticalSeverity;
	execution_behaviour = ESsmWaitForSignal;
	direction = 2;
	retries = 5;
	}

// invalid type
RESOURCE SSM_PUBLISH_SYSTEM_STATE r_command_publish_sysstate2
	{
	type = ESsmCmdLoadSup;
	severity = ECmdMediumSeverity;
	execution_behaviour = ESsmWaitForSignal;
	direction = 2;
	retries = 5;
	}

// unsupported version
RESOURCE SSM_PUBLISH_SYSTEM_STATE r_command_publish_sysstate3
	{
	version = 999;
	severity = ECmdMediumSeverity;
	execution_behaviour = ESsmWaitForSignal;
	direction = 2;
	retries = 5;
	}

// invalid Direction
RESOURCE SSM_PUBLISH_SYSTEM_STATE r_command_publish_sysstate4
	{
	severity = ECmdMediumSeverity;
	execution_behaviour = ESsmWaitForSignal;
	direction = -1;
	retries = 5;
	}

// invalid Direction
RESOURCE SSM_PUBLISH_SYSTEM_STATE r_command_publish_sysstate5
	{
	severity = ECmdMediumSeverity;
	execution_behaviour = ESsmWaitForSignal;
	direction = 200;
	retries = 5;
	}

// invalid execution_behaviour 1
RESOURCE SSM_PUBLISH_SYSTEM_STATE r_command_publish_sysstate8
	{
	severity = ECmdCriticalSeverity;
	execution_behaviour = 0;
	direction = 2;
	retries = 5;
	}

// invalid execution_behaviour 2
RESOURCE SSM_PUBLISH_SYSTEM_STATE r_command_publish_sysstate9
	{
	severity = ECmdCriticalSeverity;
	execution_behaviour = 10;
	direction = 2;
	retries = 5;
	}

// negative retries
RESOURCE SSM_PUBLISH_SYSTEM_STATE r_command_publish_sysstate10
	{
	severity = ECmdCriticalSeverity;
	execution_behaviour = ESsmWaitForSignal;
	direction = 2;
	retries = -26;
	}

#ifdef SYMBIAN_SSM_FLEXIBLE_MERGE
// valid priority
RESOURCE SSM_PUBLISH_SYSTEM_STATE r_command_publish_sysstate11
	{
	severity = ECmdCriticalSeverity;
	execution_behaviour = ESsmWaitForSignal;
	direction = 2;
	retries = 5;
	priority = 1000;
	}

RESOURCE SSM_PUBLISH_SYSTEM_STATE r_command_publish_sysstate12
	{
	version = ECmdPublishSystemStateInitialVersion;
	severity = ECmdCriticalSeverity;
	execution_behaviour = ESsmWaitForSignal;
	direction = 2;
	retries = 5;
	}
#endif



