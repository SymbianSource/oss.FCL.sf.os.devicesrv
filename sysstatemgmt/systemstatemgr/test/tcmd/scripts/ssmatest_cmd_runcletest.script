// Copyright (c) 2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//

PRINT Run CCmdRunCleTest tests

LOAD_SUITE tcmd_runcletestserver

START_TESTCASE 			DEVSRVS-SSMA-CMD-0021
//! @SYMTestCaseID 		DEVSRVS-SSMA-CMD-0021
//! @SYMDEF				EI0040
//! @SYMTestType		UT
//! @SYMTestPriority	Critical
//! @SYMTestStatus 		Implemented
//! @SYMTestCaseDesc	Integ-test for CCmdWaitForApparcInit, CCmdSetPAndSKey, CCmdFinaliseDrives, CCmdPersistHalAttributes,
//!						CCmdCreateSwp, CCmdPowerOff, CCmdAmaStarter, CCmdLoadSup, CCmdPublishSystemState, CCmdReqSwpChange
//!						testing the reconstruction of commands from CLE for both ECmdCriticalSeverity and ECmdIgnoreFailure.
//!						Integ-test for CCmdMultipleWait testing the reconstruction of commands
//! 					from CLE for ECmdIgnoreFailure, ESsmDeferredWaitForSignal.
//!						Integ-test for CCmdPublishSwp, CCmdCustomCommand, testing the reconstruction of commands
//! 					from CLE for ECmdCriticalSeverity, ECmdHighSeverity and ECmdIgnoreFailure.
//!						Integ-test for CCmdStartApp, CCmdStartProcess testing the reconstruction of commands 
//! 					from CLE for both ECmdHighSeverity and ECmdIgnoreFailure and timeout and retries.

//! @SYMTestActions	doTestRunClePublishSwpL() Performs the following tests:
//!						Create ECmdCriticalSeverity command object
//! 					Create ECmdIgnoreFailure command object
//!						Create ECmdHighSeverity	command object
//!					doTestRunCleCustomCommandL() Performs the following tests:
//!						Create ECmdCriticalSeverity command object
//! 					Create ECmdIgnoreFailure command object
//!						Create ECmdHighSeverity	command object
//!					doTestRunCleCmdLoadSupL() Performs the following tests:
//!						Create ECmdCriticalSeverity command object
//! 					Create ECmdIgnoreFailure command object
//!					doTestRunCleCmdWaitForApparcInitL() Performs the following tests:
//!						Create ECmdCriticalSeverity command object
//! 					Create ECmdIgnoreFailure command object
//!					doTestRunCleCmdSetPAndSKeyL() Performs the following tests:
//!						Create ECmdCriticalSeverity command object
//! 					Create ECmdIgnoreFailure command object
//!					doTestRunCleCmdFinaliseDrivesL() Performs the following tests:
//!						Create ECmdCriticalSeverity command object
//! 					Create ECmdIgnoreFailure command object
//!					doTestRunCleCmdPersistHalAttributesL() Performs the following tests:
//!						Create ECmdCriticalSeverity command object
//! 					Create ECmdIgnoreFailure command object
//!					doTestRunCmdPowerOffL() Performs the following tests:
//!						Create ECmdCriticalSeverity command object
//! 					Create ECmdIgnoreFailure command object
//!					doTesRunCleCmdMultipleWaitL() Performs the following tests:
//!						Create ECmdIgnoreFailure ESsmDeferredWaitForSignal command object
//!					doTestRunCleCmdAmaStarterL() Performs the following tests:
//!						Create ECmdCriticalSeverity command object
//! 					Create ECmdIgnoreFailure command object
//!					doTestRunCleCmdpublishSystemStateL() Performs the following tests:
//!						Create ECmdCriticalSeverity command object
//! 					Create ECmdIgnoreFailure command object
//!					doTestRunCleCcmdreqSwpchangeL() Performs the following tests:
//!						Create ECmdCriticalSeverity command object
//! 					Create ECmdIgnoreFailure command object
//!					doTestRunCleCmdStartAppL() Performs the following tests:
//!						Create ECmdCriticalSeverity command object
//! 					Create ECmdIgnoreFailure command object
//!					doTestRunCleCmdStartAppL() Performs the following tests:
//!						Create ECmdHighSeverity command object
//!						Create ECmdHighSeverity,retries command object
//!						Create ECmdHighSeverity, retries, timeout command object
//! 					Create ECmdIgnoreFailure command object
//!						Create ECmdIgnoreFailure,retries command object
//!						Create ECmdIgnoreFailure, retries, timeout command object
//!					doTestRunCleCmdStartProcessL() Performs the following tests:
//!						Create ECmdHighSeverity command object
//!						Create ECmdHighSeverity,retries command object
//!						Create ECmdHighSeverity, retries, timeout command object
//! 					Create ECmdIgnoreFailure command object
//!						Create ECmdIgnoreFailure,retries command object
//!						Create ECmdIgnoreFailure, retries, timeout command object
//! 				doTestRunCleFandFAppWithMonitorL() Performs the following tests:
//!						Create a StartApplication command with ECmdIgnoreFailure severity.
//! 					Add newly created command to the command list.
//! 					Set a monitor
//! 					Execute the command list.
//! 					Kill the Application 
//! 					System Monitor should restart the application after KThrottleTime (15s). 
//! 					Verify that the application is restarted.
//! 					Repeat this till the KIntervalForReLaunchRateOfFailure is enacted and app is killed
//! 				doTestRunCleFandFProcWithMonitorL() Create a StartProcess command with ECmdIgnoreFailure severity.
//! 					Add newly created command to the command list.
//! 					Set a monitor
//! 					Execute the command list.
//! 					Kill the process 
//! 					System Monitor should restart the process after KThrottleTime (15s). 
//! 					Verify that the process is restarted.
//! 					Repeat this till the KIntervalForReLaunchRateOfFailure is enacted and app is killed
//! 				doTestFandFAlreadyRunWithMonitorL() Create a StartProcess command with ECmdIgnoreFailure severity.
//! 					Add newly created command to the command list.
//! 					Set a monitor
//! 					Execute the command list.
//! 					Kill the process 
//! 					System Monitor should restart the process after KThrottleTime (15s). 
//! 					Verify that the process is restarted.
//! 					Repeat this till the KIntervalForReLaunchRateOfFailure is enacted and app is killed
//! @SYMTestExpectedResults 	Test should return KErrNone.
//! 				Test should return KErrArgument.
RUN_TEST_STEP 500 tcmd_runcletestserver CCmdRunCleTest
END_TESTCASE 			DEVSRVS-SSMA-CMD-0021
