// Copyright (c) 2008-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//

PRINT Run SsmSsmCleDeadlockStep tests

LOAD_SUITE tssm_server

START_TESTCASE 			DEVSRVS-SSMA-SSM-0021
//! @SYMTestCaseID 		DEVSRVS-SSMA-SSM-0021
//! @SYMPREQ 			PREQ1871
//! @SYMREQ			REQ9136 REQ9162
//! @SYMTestCaseDesc		Checks that a deadlock can't occur between SSM and CLE when cancelling a command list
//! 				Checks that SwP transitions are processed sequentially with no deadlock.
//! 				Checks that a deadlock can't occur with multiple concurrent SwP requests.				
//! @SYMTestType		CIT	
//! @SYMTestPriority		Critical
//! @SYMTestCaseDependencies	See tssm_statepolicy_ssmcledeadlock.cpp file
//! @SYMTestActions		DoDeadlockTestL() The test will attempt to deadlock the CLE and SSM using a combination of SwP and state changes with custom commands.
//! 				DoSequentialSwpTestL() The test will request many SwP transitions which will deadlock if they are not processed in order.
//! 				DoSequentialSwpTestL() The test will attempt to make many concurrent SwP requests which shouldn't deadlock the SSM.		
//! @SYMTestExpectedResults 	SsmServer correctly handles the combination of requests and does not deadlock or panic.
//! 				SsmServer correctly handles the combination of requests and does not deadlock or panic.
//! 				SsmServer correctly handles the combination of requests and does not deadlock or panic.				
RUN_TEST_STEP 100 tssm_server SsmSsmCleDeadlockStep
END_TESTCASE 			DEVSRVS-SSMA-SSM-0021





